# Default values for homepage.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/gethomepage/homepage
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

hostAliases: []

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 3000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: 3000
readinessProbe:
  httpGet:
    path: /
    port: 3000

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

configmap:
  config:
    widgets: |
        ---
        # For configuration options and examples, please see:
        # https://gethomepage.dev/latest/configs/widgets

        - resources:
            cpu: true
            memory: true
            disk: /

        - search:
            provider: duckduckgo
            target: _blank


    services: |
        ---
        # For configuration options and examples, please see:
        # https://gethomepage.dev/latest/configs/services

        - Arr:
            - My First Service:
                href: http://localhost/
                description: Homepage is awesome

        - Media:
            - My Second Service:
                href: http://localhost/
                description: Homepage is the best

        - Infra:
            - My Third Service:
                href: http://localhost/
                description: Homepage is ðŸ˜Ž
    bookmarks: |
        ---
        # For configuration options and examples, please see:
        # https://gethomepage.dev/latest/configs/bookmarks

        - Developer:
            - Github:
                - abbr: GH
                  href: https://github.com/

        - Social:
            - Reddit:
                - abbr: RE
                  href: https://reddit.com/

        - Entertainment:
            - YouTube:
                - abbr: YT
                  href: https://youtube.com/

        - TrueCharts:
            - TrueCharts:
              - abbr: TC
                icon: https://truecharts.org/svg/favicon.svg
                href: https://truecharts.org
                description: "TrueCharts Website"
            - Github:
              - abbr: GH
                icon: https://github.com/fluidicon.png
                href: https://github.com/truecharts
                description: "TrueCharts GitHub"
            - Open Collective:
              - abbr: TC
                icon: https://opencollective.com/favicon.ico
                href: https://opencollective.com/truecharts
                description: "TrueCharts Open Collective"
            - Discord:
              - abbr: DC
                icon: https://t2.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=http://discord.com&size=32
                href: https://truecharts.org/s/discord
                description: "TrueCharts Discord"
    settings: |
        ---
        # For configuration options and examples, please see:
        # https://gethomepage.dev/configs/settings/
        
        providers:
          openweathermap: openweathermapapikey
          weatherapi: weatherapiapikey

    kubernetes: |
        ---
        mode: cluster
    custom_css: |
        /* Add custom CSS here */
    custom_js: |
        /* Add custom JS here */
